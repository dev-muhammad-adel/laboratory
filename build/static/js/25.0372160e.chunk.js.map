{"version":3,"sources":["containers/Products/add.jsx","components/new/CardWraper/index.jsx","components/new/PageWraper/index.jsx","containers/Products/config.js"],"names":["Option","cancleButton","background","color","padding","border","marginLeft","Form","create","name","props","useState","isSubmiting","setSubmiting","history","useHistory","cat","setCat","loading","setLoading","form","getFieldDecorator","validateFields","resetFields","params","useParams","dispatch","useDispatch","setCities","localStorage","getItem","fileList","setUploading","useEffect","id","enstance","config","api","show","method","headers","then","res","data","type","payload","key","routes","indexKey","to","index","title","indexTitle","titles","edit","add","get","PageWraper","className","span","style","marginTop","CardWraper","onSubmit","e","preventDefault","err","values","country_id","formData","FormData","append","toast","promise","pending","success","render","push","message","icon","error","response","layout","Item","label","hasFeedback","initialValue","content_en","rules","required","size","content_ar","product_type","showSearch","optionFilterProp","allowClear","value","list_type","display","textAlign","CustomButton","styles","handleClick","Styled","div","styled","pages","delete","privateSub","path","replace","slice","length","permissionName","listType","1","2","3","productType"],"mappings":"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","file":"static/js/25.0372160e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form } from \"@ant-design/compatible\";\nimport \"@ant-design/compatible/assets/index.css\";\nimport { Select, Row, Input, Col, notification } from \"antd\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport CardWraper from \"../../components/new/CardWraper\";\nimport PageWraper from \"../../components/new/PageWraper\";\nimport CustomButton from \"../../components/new/CustomButton\";\nimport Loader from \"../../components/new/loader\";\nimport enstance from \"../../library/helpers/axios\";\nimport { useDispatch } from \"react-redux\";\nimport IntlMessages from \"@iso/components/utility/intlMessages\";\nimport config from \"./config\";\nimport { toast } from \"react-toastify\";\nimport Edit from \"@iso/components/ContentText\";\n\nconst { Option } = Select;\nconst NewCountry = (props) => {\n  const [isSubmiting, setSubmiting] = useState(false);\n  const history = useHistory();\n  const [cat, setCat] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { getFieldDecorator, resetFields, validateFields } = props.form;\n  const params = useParams();\n  const dispatch = useDispatch();\n  const [cities, setCities] = useState(null);\n  const [countries, setCountries] = useState(null);\n\n  // const isLoggedIn = useSelector((state) => state.Auth.idToken);\n\n  /////////////////////////////\n  const getLang = localStorage.getItem(\"lang\");\n\n  /////////////////////////////////////////////////////////////\n\n  const [fileList, setFileList] = useState([]);\n  const [uploading, setUploading] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    validateFields((err, values) => {\n      delete values.country_id;\n      const formData = new FormData();\n      if (fileList[0]) {\n        formData.append(\"image\", fileList[0]);\n      }\n\n      for (var key in values) {\n        formData.append(key, values[key]);\n      }\n      setUploading(true);\n      if (!err) {\n       \n\n setSubmiting(true);\n toast.promise(\n  enstance[\n          cat ? config?.api?.edit?.[0]?.method : config?.api?.add?.[0]?.method\n        ](\n          cat\n            ? `${config?.api?.edit?.[1]}${params?.id}`\n            : config?.api?.add?.[1],\n          values,\n          {\n            headers: {},\n          }\n        )\n,\n{\n        pending: \"Pending\",\n        success: {\n          render(res) {\n            setSubmiting(false);\n               history.push(config.routes.index); \n            return `ðŸ‘Œ ${res.data.data.message}`;\n          },\n          // other options\n          icon: \"ðŸŸ¢\",\n        },\n        error: {\n          render(err) {\n             setSubmiting(false);\n            return `ðŸ¤¯ ${\n              err?.data?.response?.data?.message || \"Backend Error Occured\"\n            }`;\n          },\n          // other options\n          //    icon: \"ðŸŸ¢\",\n        },\n      }\n    );\n\n\n\n\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (params.id) {\n      setLoading(true);\n      enstance[config?.api?.show?.[0]?.method](\n        `${config?.api?.show?.[1]}${params.id}`,\n        {\n          headers: {},\n        }\n      ).then((res) => {\n        setLoading(false);\n        setCat(res.data.data);\n      });\n    }\n  }, []);\n\n  const props2 = {\n    onRemove: (file) => {\n      this.setState((state) => {\n        const index = state.fileList.indexOf(file);\n        const newFileList = state.fileList.slice();\n        newFileList.splice(index, 1);\n        return {\n          fileList: newFileList,\n        };\n      });\n    },\n\n    beforeUpload: (file) => {\n      console.log(file);\n      setFileList([file]);\n\n      return false;\n    },\n    fileList,\n  };\n  dispatch({\n    type: \"SET\",\n    payload: [\n      {\n        key: config.routes.indexKey,\n        to: config.routes.index,\n        title: config.routes.indexTitle,\n      },\n      {\n        key: params.id ? config.titles.edit : config.titles.add,\n        to: params.id ? `${config.routes.edit}${params.id}` : config.routes.add,\n        title: params.id ? config.titles.edit : config.titles.add,\n      },\n    ],\n  });\n  useEffect(()=>{\n\n    const params = {};\n    enstance\n      .get(`cities`, {\n        headers: {},\n        params,\n      })\n      .then((res) => {\n        setCities(res.data.data);\n      });\n\n\n  },[])\n\n\n  return (\n    <PageWraper>\n      <div className=\"new_user_container\">\n        <Row>\n          <Col span={24} style={{ marginTop: \"1rem\" }}>\n            <CardWraper>\n              {loading ? (\n                <Loader />\n              ) : (\n                <Row>\n                  <Col span={24}>\n                    <Form\n                      onSubmit={handleSubmit}\n                      layout=\"vertical\"\n                      className=\"login-form\"\n                    >\n                      <Form.Item\n                        label={<IntlMessages id=\"content_en\" />}\n                        hasFeedback\n                      >\n                        {getFieldDecorator(\"content_en\", {\n                          initialValue: cat ? cat.content_en : \"\",\n                          rules: [\n                            {\n                              required: true,\n                              message: <IntlMessages id=\"content_en\" />,\n                            },\n                          ],\n                        })(<Input type=\"text\" size=\"large\" />)}\n                      </Form.Item>\n\n                      <Form.Item\n                        label={<IntlMessages id=\"content_ar\" />}\n                        hasFeedback\n                      >\n                        {getFieldDecorator(\"content_ar\", {\n                          initialValue: cat ? cat.content_ar : \"\",\n                          rules: [\n                            {\n                              required: true,\n                              message: <IntlMessages id=\"content_ar\" />,\n                            },\n                          ],\n                        })(<Input type=\"text\" size=\"large\" />)}\n                      </Form.Item>\n\n                      {/* <Edit inputValue='hello mohamed'  /> */}\n\n                      <Form.Item label={<IntlMessages id=\"product_type\" />} hasFeedback>\n                        {getFieldDecorator(\"product_type\", {\n                          initialValue: cat ? cat?.product_type : \"\",\n                          rules: [\n                            {\n                              required: true,\n                              message: <IntlMessages id=\"product_type\" />,\n                            },\n                          ],\n                        })(\n                          <Select\n                          showSearch\n                          optionFilterProp=\"children\"\n                          size=\"large\"\n                          allowClear\n                        >\n                            <Option value={1}> Tawrrouq </Option>\n                            <Option value={2}> Ijarah </Option>\n                            <Option value={3}> Morapha </Option>\n                        </Select>\n                        )}\n                      </Form.Item>\n      \n                      <Form.Item label={<IntlMessages id=\"list_type\" />} hasFeedback>\n                        {getFieldDecorator(\"list_type\", {\n                          initialValue: cat ? cat?.list_type : \"\",\n                          rules: [\n                            {\n                              required: true,\n                              message: <IntlMessages id=\"list_type\" />,\n                            },\n                          ],\n                        })(\n                          <Select\n                            showSearch\n                            optionFilterProp=\"children\"\n                            size=\"large\"\n                            allowClear\n                          >\n                              <Option value={1}> Advantages </Option>\n                              <Option value={2}> General Conditions </Option>\n                              <Option value={3}> Required Documents </Option>\n                          </Select>\n                        )}\n                      </Form.Item>\n                      <div\n                        style={{\n                          display: \"block\",\n                          marginTop: \"1.2rem\",\n                          textAlign: \"center\",\n                        }}\n                      >\n                        <CustomButton\n                          styles={{ padding: \".7rem 4rem\" }}\n                          type=\"submit\"\n                        >\n                          {isSubmiting && <Loader />}\n                          <span>\n                            {\" \"}\n                            {params.id ? (\n                              <IntlMessages id=\"global.submit\" />\n                            ) : (\n                              <IntlMessages id=\"global.submit\" />\n                            )}{\" \"}\n                          </span>\n                        </CustomButton>\n                        <CustomButton\n                          type=\"button\"\n                          handleClick={() => {\n                            history.push(config.routes.index);\n                          }}\n                          styles={cancleButton}\n                        >\n                          <IntlMessages id=\"global.cancel\" />\n                        </CustomButton>\n                      </div>\n                    </Form>\n                  </Col>\n                </Row>\n              )}\n            </CardWraper>\n          </Col>\n        </Row>\n      </div>\n    </PageWraper>\n  );\n};\n\nconst inputStyle = {\n  width: \"100%\",\n  border: \"1px solid #1b5b7e\",\n  borderRadius: \"0.4rem\",\n};\n\nconst cancleButton = {\n  background: \"white\",\n  color: \"#1b5b7e\",\n  padding: \".7rem 3rem\",\n  border: \"1px solid #1b5b7e\",\n  marginLeft: \"1rem\",\n};\n\nexport default Form.create({ name: \"new-country\" })(NewCountry);\n","import Styled from \"styled-components\";\n\nconst CardWraper = Styled.div`\n    width: 100%;\n    box-shadow: 0px 2px 6px #0000000A;\n    border-radius: 13px;\n    background: #FFFFFF 0% 0% no-repeat padding-box; \n    padding : 1rem 2rem;\n    height: 100%;\n \n    overflow: hidden ;\n`;\nexport default CardWraper;\n","import styled from \"styled-components\";\n\nconst PageWraper = styled.div`\n  padding: 1rem;\n`;\n\nexport default PageWraper;\n","import { routes } from \"../Dashboard/DashboardRoutes\";\nimport { privateSub } from \"../../router\";\n\nconst pages = {\n  index: \"Products\",\n  add: \"ProductsNew\",\n  edit: \"ProductsEdit\",\n  show: \"ProductsShow\",\n};\nconst config = {\n  api: {\n    index: [{ method: \"get\", params: {} }, \"product_information\"],\n    add: [{ method: \"post\", params: {} }, \"product_information\"],\n    edit: [{ method: \"put\", params: {} }, \"product_information/\"],\n    show: [{ method: \"get\", params: {} }, \"product_information/\"],\n    delete: [{ method: \"delete\", params: {} }, \"product_information/\"],\n  },\n  routes: {\n    index: `${privateSub}/${routes[pages.index]?.path}`,\n    indexTitle: pages.index.replace(/([a-z])([A-Z])/g, \"$1 $2\"),\n    indexKey: \"home\",\n    add: `${privateSub}/${routes[pages.add]?.path}`,\n    edit: `${privateSub}/${routes[pages.edit]?.path.slice(\n      0,\n      routes[pages.edit].path.length - 3\n    )}`,\n    show: `${privateSub}/${routes[pages.show]?.path.slice(\n      0,\n      routes[pages.show]?.path.length - 3\n    )}`,\n  },\n  titles: {\n    add: \"Create\",\n    edit: \"global.edit\",\n    show: \"Details\",\n  },\n  permissionName: \"productInformation\",\n};\nexport const listType = {\n  1: \"Advantages\",\n  2: \"General Conditions\",\n  3: \"Required Documents\",\n};\nexport const productType = {\n  1: \"Tawrrouq\",\n  2: \"Ijarah\",\n  3: \"Morapha\",\n};\n\nexport default config;\n"],"sourceRoot":""}