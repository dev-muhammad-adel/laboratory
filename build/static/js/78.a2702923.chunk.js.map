{"version":3,"sources":["MaterialComponents/cards/EarningCard/index.js","MaterialComponents/cards/EarningCard/index2.js","MaterialComponents/cards/TotalChartCard/index.js","MaterialComponents/cards/TotalIncomePatternCard/index.js","MaterialComponents/cards/TotalIncomeCard/index.js","MaterialComponents/cards/ChartCard/chart/bar-chart.js","MaterialComponents/cards/PopularCard/support-chart.js","MaterialComponents/cards/PopularCard/BajajCard.js","MaterialComponents/cards/PopularCard/index.js","containers/Home/users.jsx","containers/Home/visit.js","containers/Home/visitsOthers.jsx","containers/Home/order.jsx","containers/Home/Partners.jsx","containers/Home/index.jsx","assets/images/icon/earning.svg"],"names":["useStyles","makeStyles","theme","console","log","card","backgroundColor","color","overflow","position","content","width","height","palette","dark","borderRadius","top","right","breakpoints","down","opacity","padding","avatar","typography","commonAvatar","largeAvatar","marginTop","avatarRight","mediumAvatar","main","zIndex","cardHeading","fontSize","fontWeight","marginRight","marginBottom","subHeading","avatarCricle","cursor","smallAvatar","circleIcon","transform","menuItem","EarningCard","props","classes","React","useState","anchorEl","setAnchorEl","handleClose","Card","className","CardContent","Grid","container","direction","item","justifyContent","Avatar","variant","Menu","id","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","onClick","alignItems","Typography","data","label","primary","TotalChartCard","title","light","background","secondary","paddingTop","paddingBottom","warning","grey","value","orange","contentContainer","errorLight","fontStyle","cardAction","primaryLight","divider","avatarSuccess","success","marginLeft","successDark","avatarError","errorDark","Title","gridSpacing","drawerWidth","Dashboard","dispatch","useDispatch","setData","loading","setLoading","type","payload","setChartData","setChartDataNew","setPitent","useEffect","axios","headers","params","then","res","map","mainIndex","visits","old","undefined","actor","charAt","toUpperCase","slice","visit_type","order_count","str","replaceAll","types","_data","filter","e","allPaitent","users","role","catch","err","fetchData","style","margin","spacing","xs","lg","md","sm","noOfApplications","noOfRegistrations","module","exports"],"mappings":"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","file":"static/js/78.a2702923.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  makeStyles,\n  Menu,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\n\nimport EarningIcon from \"@iso/assets/images/icon/earning.svg\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\n\nimport GetAppTwoToneIcon from \"@material-ui/icons/GetAppOutlined\";\nimport FileCopyTwoToneIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport PictureAsPdfTwoToneIcon from \"@material-ui/icons/PictureAsPdfOutlined\";\nimport ArchiveTwoToneIcon from \"@material-ui/icons/ArchiveOutlined\";\n// info: {light: '#64b5f6', main: '#2196f3', dark: '#1976d2', contrastText: '#fff'}\n// mode: \"dark\"\n// orange: {light: '#fbe9e7', main: '#ffab91', dark: '#d84315'}\n// primary: {200: '#90caf9', 800: '#1565c0', light: '#e3f2fd', main: '#2196f3', dark: '#1e88e5', contrastText: '#fff'}\n// purple: {200: '#b39ddb', 800: '#4527a0', light: '#ede7f6', main: '#673ab7', dark: '#5e35b1'}\n// secondary: {200: '#b39ddb', 800: '#4527a0', light: '#ede7f6', main: '#673ab7', dark: '#5e35b1', contrastText: '#fff'}\n// success: {light: '#b9f6ca',\nconst useStyles = makeStyles((theme) => {\n  console.log(theme[\"palette\"]);\n  let palette = \"success\";\n  return {\n    card: {\n      backgroundColor: \"#08b25d\",\n      color: \"#fff\",\n      overflow: \"hidden\",\n      position: \"relative\",\n      \"&:after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        width: \"210px\",\n        height: \"210px\",\n        backgroundColor: theme.palette[palette].dark,\n        borderRadius: \"50%\",\n        top: \"-85px\",\n        right: \"-95px\",\n        [theme.breakpoints.down(\"xs\")]: {\n          top: \"-105px\",\n          right: \"-140px\",\n        },\n      },\n      \"&:before\": {\n        content: '\"\"',\n        position: \"absolute\",\n        width: \"210px\",\n        height: \"210px\",\n        backgroundColor: theme.palette[palette].dark,\n        borderRadius: \"50%\",\n        top: \"-125px\",\n        right: \"-15px\",\n        opacity: 0.7,\n        [theme.breakpoints.down(\"xs\")]: {\n          top: \"-155px\",\n          right: \"-70px\",\n        },\n      },\n    },\n    content: {\n      padding: \"20px !important\",\n    },\n    avatar: {\n      ...theme.typography.commonAvatar,\n      ...theme.typography.largeAvatar,\n      backgroundColor: theme.palette[palette].dark,\n      marginTop: \"8px\",\n    },\n    avatarRight: {\n      ...theme.typography.commonAvatar,\n      ...theme.typography.mediumAvatar,\n      backgroundColor: theme.palette[palette].main,\n      color: theme.palette[palette][200],\n      zIndex: 1,\n    },\n    cardHeading: {\n      fontSize: \"2.125rem\",\n      fontWeight: 500,\n      marginRight: \"8px\",\n      marginTop: \"18px\",\n      marginBottom: \"8px\",\n    },\n    subHeading: {\n      fontSize: \"1.5rem\",\n      fontWeight: 500,\n      color: theme.palette[palette][200],\n    },\n    avatarCricle: {\n      cursor: \"pointer\",\n      ...theme.typography.smallAvatar,\n      backgroundColor: theme.palette[palette][200],\n      color: theme.palette[palette].dark,\n    },\n    circleIcon: {\n      transform: \"rotate3d(1, 1, 1, 45deg)\",\n    },\n    menuItem: {\n      marginRight: \"14px\",\n      fontSize: \"1.25rem\",\n    },\n  };\n});\n\nconst EarningCard = (props) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Grid container direction=\"column\">\n          <Grid item>\n            <Grid container justifyContent=\"space-between\">\n              <Grid item>\n                <Avatar variant=\"rounded\" className={classes.avatar}>\n                  {/* <img src={EarningIcon} alt=\"Notification\" /> */}\n                </Avatar>\n              </Grid>\n\n              <Grid item>\n                {/* <Avatar\n                  variant=\"rounded\"\n                  className={classes.avatarRight}\n                  aria-controls=\"menu-earning-card\"\n                  aria-haspopup=\"true\"\n                  onClick={handleClick}\n                >\n                  <MoreHorizIcon fontSize=\"inherit\" />\n                </Avatar> */}\n                <Menu\n                  id=\"menu-earning-card\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={Boolean(anchorEl)}\n                  onClose={handleClose}\n                  variant=\"selectedMenu\"\n                  anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"right\",\n                  }}\n                  transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\",\n                  }}\n                >\n                  <MenuItem onClick={handleClose}>\n                    <GetAppTwoToneIcon\n                      fontSize=\"inherit\"\n                      className={classes.menuItem}\n                    />{\" \"}\n                    Import Card\n                  </MenuItem>\n                  <MenuItem onClick={handleClose}>\n                    <FileCopyTwoToneIcon\n                      fontSize=\"inherit\"\n                      className={classes.menuItem}\n                    />{\" \"}\n                    Copy Data\n                  </MenuItem>\n                  <MenuItem onClick={handleClose}>\n                    <PictureAsPdfTwoToneIcon\n                      fontSize=\"inherit\"\n                      className={classes.menuItem}\n                    />{\" \"}\n                    Export\n                  </MenuItem>\n                  <MenuItem onClick={handleClose}>\n                    <ArchiveTwoToneIcon\n                      fontSize=\"inherit\"\n                      className={classes.menuItem}\n                    />{\" \"}\n                    Archive File\n                  </MenuItem>\n                </Menu>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <Typography className={classes.cardHeading}>\n                  {props.data}\n                </Typography>\n              </Grid>\n              {/* <Grid item>\n                <Avatar className={classes.avatarCricle}>\n                 \n                </Avatar>\n              </Grid> */}\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Typography className={classes.subHeading}>\n              {props.label}\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default EarningCard;\n","import React from \"react\";\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  makeStyles,\n  Menu,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\n\nimport EarningIcon from \"@iso/assets/images/icon/earning.svg\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\n\nimport GetAppTwoToneIcon from \"@material-ui/icons/GetAppOutlined\";\nimport FileCopyTwoToneIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport PictureAsPdfTwoToneIcon from \"@material-ui/icons/PictureAsPdfOutlined\";\nimport ArchiveTwoToneIcon from \"@material-ui/icons/ArchiveOutlined\";\n// info: {light: '#64b5f6', main: '#2196f3', dark: '#1976d2', contrastText: '#fff'}\n// mode: \"dark\"\n// orange: {light: '#fbe9e7', main: '#ffab91', dark: '#d84315'}\n// primary: {200: '#90caf9', 800: '#1565c0', light: '#e3f2fd', main: '#2196f3', dark: '#1e88e5', contrastText: '#fff'}\n// purple: {200: '#b39ddb', 800: '#4527a0', light: '#ede7f6', main: '#673ab7', dark: '#5e35b1'}\n// secondary: {200: '#b39ddb', 800: '#4527a0', light: '#ede7f6', main: '#673ab7', dark: '#5e35b1', contrastText: '#fff'}\n// success: {light: '#b9f6ca',\nconst useStyles = makeStyles((theme) => {\n  console.log(theme[\"palette\"]);\n  let palette = \"orange\";\n  return {\n    card: {\n      backgroundColor: \"#b42e04\",\n      color: \"#fff\",\n      overflow: \"hidden\",\n      position: \"relative\",\n      \"&:after\": {\n        content: '\"\"',\n        position: \"absolute\",\n        width: \"210px\",\n        height: \"210px\",\n        backgroundColor: theme.palette[palette].dark,\n        borderRadius: \"50%\",\n        top: \"-85px\",\n        right: \"-95px\",\n        [theme.breakpoints.down(\"xs\")]: {\n          top: \"-105px\",\n          right: \"-140px\",\n        },\n      },\n      \"&:before\": {\n        content: '\"\"',\n        position: \"absolute\",\n        width: \"210px\",\n        height: \"210px\",\n        backgroundColor: theme.palette[palette].dark,\n        borderRadius: \"50%\",\n        top: \"-125px\",\n        right: \"-15px\",\n        opacity: 0.7,\n        [theme.breakpoints.down(\"xs\")]: {\n          top: \"-155px\",\n          right: \"-70px\",\n        },\n      },\n    },\n    content: {\n      padding: \"20px !important\",\n    },\n    avatar: {\n      ...theme.typography.commonAvatar,\n      ...theme.typography.largeAvatar,\n      backgroundColor: theme.palette[palette].dark,\n      marginTop: \"8px\",\n    },\n    avatarRight: {\n      ...theme.typography.commonAvatar,\n      ...theme.typography.mediumAvatar,\n      backgroundColor: theme.palette[palette].main,\n      color: theme.palette[palette][200],\n      zIndex: 1,\n    },\n    cardHeading: {\n      fontSize: \"2.125rem\",\n      fontWeight: 500,\n      marginRight: \"8px\",\n      marginTop: \"18px\",\n      marginBottom: \"8px\",\n    },\n    subHeading: {\n      fontSize: \"1.5rem\",\n      fontWeight: 500,\n      color: theme.palette[palette][200],\n    },\n    avatarCricle: {\n      cursor: \"pointer\",\n      ...theme.typography.smallAvatar,\n      backgroundColor: theme.palette[palette][200],\n      color: theme.palette[palette].dark,\n    },\n    circleIcon: {\n      transform: \"rotate3d(1, 1, 1, 45deg)\",\n    },\n    menuItem: {\n      marginRight: \"14px\",\n      fontSize: \"1.25rem\",\n    },\n  };\n});\n\nconst EarningCard = (props) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Grid container direction=\"column\">\n          <Grid item>\n            <Grid container justifyContent=\"space-between\">\n              <Grid item>\n                <Avatar variant=\"rounded\" className={classes.avatar}>\n                  £\n                </Avatar>\n              </Grid>\n              <Grid item>\n                {/* <Avatar\n                  variant=\"rounded\"\n                  className={classes.avatarRight}\n                  aria-controls=\"menu-earning-card\"\n                  aria-haspopup=\"true\"\n                  onClick={handleClick}\n                >\n                  <MoreHorizIcon fontSize=\"inherit\" />\n                </Avatar> */}\n                <Menu\n                  id=\"menu-earning-card\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={Boolean(anchorEl)}\n                  onClose={handleClose}\n                  variant=\"selectedMenu\"\n                  anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"right\",\n                  }}\n                  transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\",\n                  }}\n                >\n                  <MenuItem onClick={handleClose}>\n                    <GetAppTwoToneIcon\n                      fontSize=\"inherit\"\n                      className={classes.menuItem}\n                    />{\" \"}\n                    Import Card\n                  </MenuItem>\n                  <MenuItem onClick={handleClose}>\n                    <FileCopyTwoToneIcon\n                      fontSize=\"inherit\"\n                      className={classes.menuItem}\n                    />{\" \"}\n                    Copy Data\n                  </MenuItem>\n                  <MenuItem onClick={handleClose}>\n                    <PictureAsPdfTwoToneIcon\n                      fontSize=\"inherit\"\n                      className={classes.menuItem}\n                    />{\" \"}\n                    Export\n                  </MenuItem>\n                  <MenuItem onClick={handleClose}>\n                    <ArchiveTwoToneIcon\n                      fontSize=\"inherit\"\n                      className={classes.menuItem}\n                    />{\" \"}\n                    Archive File\n                  </MenuItem>\n                </Menu>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <Typography className={classes.cardHeading}>\n                  {props.data}\n                </Typography>\n              </Grid>\n              {/* <Grid item>\n                <Avatar className={classes.avatarCricle}>\n                  <ArrowUpwardIcon\n                    fontSize=\"inherit\"\n                    className={classes.circleIcon}\n                  />\n                </Avatar>\n              </Grid> */}\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Typography className={classes.subHeading}>\n              {props.label}\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default EarningCard;\n","import React from \"react\";\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  makeStyles,\n  Menu,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\n\nimport LocalMallOutlinedIcon from \"@material-ui/icons/LocalMallOutlined\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport GetAppTwoToneIcon from \"@material-ui/icons/GetAppOutlined\";\nimport FileCopyTwoToneIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport PictureAsPdfTwoToneIcon from \"@material-ui/icons/PictureAsPdfOutlined\";\nimport ArchiveTwoToneIcon from \"@material-ui/icons/ArchiveOutlined\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"#fff\",\n    overflow: \"hidden\",\n    position: \"relative\",\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      width: \"210px\",\n      height: \"210px\",\n      backgroundColor: theme.palette.primary.dark,\n      borderRadius: \"50%\",\n      top: \"-85px\",\n      right: \"-95px\",\n      [theme.breakpoints.down(\"xs\")]: {\n        top: \"-105px\",\n        right: \"-140px\",\n      },\n    },\n    \"&:before\": {\n      content: '\"\"',\n      position: \"absolute\",\n      width: \"210px\",\n      height: \"210px\",\n      backgroundColor: theme.palette.primary.dark,\n      borderRadius: \"50%\",\n      top: \"-125px\",\n      right: \"-15px\",\n      opacity: 0.7,\n      [theme.breakpoints.down(\"xs\")]: {\n        top: \"-155px\",\n        right: \"-70px\",\n      },\n    },\n  },\n  content: {\n    padding: \"20px !important\",\n  },\n  avatar: {\n    ...theme.typography.commonAvatar,\n    ...theme.typography.largeAvatar,\n    backgroundColor: theme.palette.primary.dark,\n    color: \"#fff\",\n    marginTop: \"8px\",\n  },\n  avatarRight: {\n    ...theme.typography.commonAvatar,\n    ...theme.typography.mediumAvatar,\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary[200],\n    zIndex: 1,\n  },\n  cardHeading: {\n    fontSize: \"2.125rem\",\n    fontWeight: 500,\n    marginRight: \"8px\",\n    marginTop: \"18px\",\n    marginBottom: \"8px\",\n  },\n  subHeading: {\n    fontSize: \"1.5rem\",\n    fontWeight: 500,\n    color: theme.palette.primary[200],\n  },\n  avatarCricle: {\n    ...theme.typography.smallAvatar,\n    cursor: \"pointer\",\n    backgroundColor: theme.palette.primary[200],\n    color: theme.palette.primary.dark,\n  },\n  circleIcon: {\n    transform: \"rotate3d(1, 1, 1, 45deg)\",\n  },\n  menuItem: {\n    marginRight: \"14px\",\n    fontSize: \"1.25rem\",\n  },\n}));\n\nconst TotalChartCard = (props) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Grid container direction=\"column\">\n          <Grid item>\n            <Grid container justifyContent=\"space-between\">\n              <Grid item>\n                <Avatar variant=\"rounded\" className={classes.avatar}>\n                  <LocalMallOutlinedIcon fontSize=\"inherit\" />\n                </Avatar>\n              </Grid>\n              <Grid item>\n                {/* <Avatar\n                  variant=\"rounded\"\n                  className={classes.avatarRight}\n                  aria-controls=\"menu-total-chart-card\"\n                  aria-haspopup=\"true\"\n                  onClick={handleClick}\n                >\n                  <MoreHorizIcon fontSize=\"inherit\" />\n                </Avatar> */}\n                <Menu\n                  id=\"menu-total-chart-card\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={Boolean(anchorEl)}\n                  onClose={handleClose}\n                  variant=\"selectedMenu\"\n                  anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"right\",\n                  }}\n                  transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\",\n                  }}\n                >\n                  <MenuItem onClick={handleClose}>\n                    <GetAppTwoToneIcon\n                      fontSize=\"inherit\"\n                      className={classes.menuItem}\n                    />{\" \"}\n                    Import Card\n                  </MenuItem>\n                  <MenuItem onClick={handleClose}>\n                    <FileCopyTwoToneIcon\n                      fontSize=\"inherit\"\n                      className={classes.menuItem}\n                    />{\" \"}\n                    Copy Data\n                  </MenuItem>\n                  <MenuItem onClick={handleClose}>\n                    <PictureAsPdfTwoToneIcon\n                      fontSize=\"inherit\"\n                      className={classes.menuItem}\n                    />{\" \"}\n                    Export\n                  </MenuItem>\n                  <MenuItem onClick={handleClose}>\n                    <ArchiveTwoToneIcon\n                      fontSize=\"inherit\"\n                      className={classes.menuItem}\n                    />{\" \"}\n                    Archive File\n                  </MenuItem>\n                </Menu>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <Typography className={classes.cardHeading}>\n                  {props.data}\n                </Typography>\n              </Grid>\n              {/* <Grid item>\n                <Avatar className={classes.avatarCricle}>\n                  <ArrowDownwardIcon\n                    fontSize=\"inherit\"\n                    className={classes.circleIcon}\n                  />\n                </Avatar>\n              </Grid> */}\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Typography className={classes.subHeading}>\n              {props.title}\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default TotalChartCard;\n","import React from \"react\";\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\n\nimport TableChartOutlinedIcon from \"@material-ui/icons/TableChartOutlined\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.primary.light,\n    overflow: \"hidden\",\n    position: \"relative\",\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      width: \"210px\",\n      height: \"210px\",\n      background:\n        \"linear-gradient(210.04deg, #90CAF9 -50.94%, rgba(144, 202, 249, 0) 83.49%)\",\n      borderRadius: \"50%\",\n      top: \"-30px\",\n      right: \"-180px\",\n    },\n    \"&:before\": {\n      content: '\"\"',\n      position: \"absolute\",\n      width: \"210px\",\n      height: \"210px\",\n      background:\n        \"linear-gradient(140.9deg, #90CAF9 -14.02%, rgba(144, 202, 249, 0) 77.58%)\",\n      borderRadius: \"50%\",\n      top: \"-160px\",\n      right: \"-130px\",\n    },\n  },\n  content: {\n    padding: \"16px !important\",\n  },\n  avatar: {\n    ...theme.typography.commonAvatar,\n    ...theme.typography.largeAvatar,\n    backgroundColor: theme.palette.primary[800],\n    color: \"#fff\",\n  },\n  primary: {\n    color: \"#fff\",\n  },\n  secondary: {\n    color: theme.palette.primary.light,\n    marginTop: \"5px\",\n  },\n  padding: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n}));\n\nconst TotalIncomePatternCard = ({ data, label }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <List className={classes.padding}>\n          <ListItem\n            alignItems=\"center\"\n            disableGutters\n            className={classes.padding}\n          >\n            <ListItemAvatar>\n              <Avatar variant=\"rounded\" className={classes.avatar}>\n                <TableChartOutlinedIcon fontSize=\"inherit\" />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              className={classes.padding}\n              primary={\n                <Typography variant=\"h4\" className={classes.primary}>\n                  {data}\n                </Typography>\n              }\n              secondary={\n                <Typography variant=\"subtitle2\" className={classes.secondary}>\n                  {label}\n                </Typography>\n              }\n            />\n          </ListItem>\n        </List>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default TotalIncomePatternCard;\n","import React from \"react\";\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\n\nimport StorefrontTwoToneIcon from \"@material-ui/icons/StorefrontTwoTone\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    padding: \"16px !important\",\n  },\n  avatar: {\n    ...theme.typography.commonAvatar,\n    ...theme.typography.largeAvatar,\n    backgroundColor: theme.palette.warning.light,\n    color: theme.palette.warning.dark,\n  },\n  secondary: {\n    color: theme.palette.grey[500],\n    marginTop: \"5px\",\n  },\n  padding: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n}));\n\nconst TotalIncomeCard = () => {\n  const classes = useStyles();\n\n  return (\n    <Card>\n      <CardContent className={classes.content}>\n        <List className={classes.padding}>\n          <ListItem\n            alignItems=\"center\"\n            disableGutters\n            className={classes.padding}\n          >\n            <ListItemAvatar>\n              <Avatar variant=\"rounded\" className={classes.avatar}>\n                <StorefrontTwoToneIcon fontSize=\"inherit\" />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              className={classes.padding}\n              primary={<Typography variant=\"h4\">$203k</Typography>}\n              secondary={\n                <Typography variant=\"subtitle2\" className={classes.secondary}>\n                  Total Income\n                </Typography>\n              }\n            />\n          </ListItem>\n        </List>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default TotalIncomeCard;\n","import value from \"@iso/assets/styles/local/_themes-vars.module.scss\";\n\nconst chartData = {\n  height: 480,\n  type: \"bar\",\n  options: {\n    chart: {\n      stacked: true,\n      toolbar: {\n        show: true,\n      },\n      zoom: {\n        enabled: true,\n      },\n    },\n    colors: [\n      value[\"blue200\"],\n      value[\"blue500\"],\n      value[\"deepPurple500\"],\n      value[\"deepPurple50\"],\n    ],\n    responsive: [\n      {\n        breakpoint: 480,\n        options: {\n          legend: {\n            position: \"bottom\",\n            offsetX: -10,\n            offsetY: 0,\n          },\n        },\n      },\n    ],\n    plotOptions: {\n      bar: {\n        horizontal: false,\n      },\n    },\n    xaxis: {\n      type: \"string\",\n      categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\n      labels: {\n        style: {\n          colors: [],\n        },\n      },\n    },\n    yaxis: {\n      labels: {\n        style: {\n          colors: [],\n        },\n      },\n    },\n    legend: {\n      show: true,\n      fontSize: \"14px\",\n      fontFamily: `'Roboto', sans-serif`,\n      position: \"bottom\",\n      offsetX: 10,\n      labels: {\n        colors: value[\"grey500\"],\n        useSeriesColors: false,\n      },\n      markers: {\n        width: 16,\n        height: 16,\n        radius: 5,\n      },\n      itemMargin: {\n        horizontal: 15,\n        vertical: 8,\n      },\n    },\n    fill: {\n      type: \"solid\",\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    grid: {\n      show: true,\n    },\n  },\n  series: [\n    {\n      name: \"Investment\",\n      data: [32, 124, 32, 32, 32, 80, 32],\n    },\n    {\n      name: \"Loss\",\n      data: [32, 15, 15, 32, 64, 38, 78],\n    },\n    {\n      name: \"Profit\",\n      data: [32, 145, 32, 32, 19, 102, 100],\n    },\n    {\n      name: \"Maintenance\",\n      data: [0, 0, 0, 0, 0, 132],\n    },\n  ],\n};\nexport default chartData;\n","import value from \"@iso/assets/styles/local/_themes-vars.module.scss\";\n\nconst chartData = {\n  type: \"area\",\n  height: 95,\n  options: {\n    chart: {\n      sparkline: {\n        enabled: true,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    colors: [value[\"deepOrange800\"]],\n    stroke: {\n      curve: \"smooth\",\n      width: 1,\n    },\n    tooltip: {\n      fixed: {\n        enabled: false,\n      },\n      x: {\n        show: false,\n      },\n      y: {\n        title: {\n          formatter: (seriesName) => \"Ticket \",\n        },\n      },\n      marker: {\n        show: false,\n      },\n    },\n  },\n  series: [\n    {\n      data: [0, 15, 10, 50, 30, 40, 25],\n    },\n  ],\n};\nexport default chartData;\n","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  Grid,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport Chart from \"react-apexcharts\";\nimport supportChart from \"./support-chart\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    backgroundColor: theme.palette.orange.main,\n  },\n  content: {\n    padding: \"0px !important\",\n  },\n  contentContainer: {\n    padding: \"16px\",\n    paddingBottom: 0,\n    color: \"#fff\",\n  },\n  errorLight: {\n    color: theme.palette.orange.light,\n  },\n  fontStyle: {\n    fontWeight: 400,\n  },\n}));\n\nconst BajajCard = () => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Grid container className={classes.contentContainer}>\n          <Grid item xs={12}>\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n              <Grid item>\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"inherit\"\n                  className={classes.fontStyle}\n                >\n                  Bajaj Finsery\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"subtitle1\" color=\"inherit\">\n                  $1839.00\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"subtitle2\" className={classes.errorLight}>\n              10% Profit\n            </Typography>\n          </Grid>\n        </Grid>\n        <Chart {...supportChart} />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default BajajCard;\n","import React from \"react\";\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Grid,\n  makeStyles,\n  Menu,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\n\nimport ChevronRightOutlinedIcon from \"@material-ui/icons/ChevronRightOutlined\";\nimport MoreHorizOutlinedIcon from \"@material-ui/icons/MoreHorizOutlined\";\n\nimport KeyboardArrowUpOutlinedIcon from \"@material-ui/icons/KeyboardArrowUpOutlined\";\nimport KeyboardArrowDownOutlinedIcon from \"@material-ui/icons/KeyboardArrowDownOutlined\";\n\nimport BajajCard from \"./BajajCard\";\nimport { gridSpacing } from \"@iso/assets/styles/constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardAction: {\n    padding: \"10px\",\n    paddingTop: 0,\n    justifyContent: \"center\",\n  },\n  primaryLight: {\n    color: theme.palette.primary[200],\n    cursor: \"pointer\",\n  },\n  divider: {\n    marginTop: \"12px\",\n    marginBottom: \"12px\",\n  },\n  avatarSuccess: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"5px\",\n    backgroundColor: theme.palette.success.light,\n    color: theme.palette.success.dark,\n    marginLeft: \"15px\",\n  },\n  successDark: {\n    color: theme.palette.success.dark,\n  },\n  avatarError: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"5px\",\n    backgroundColor: theme.palette.orange.light,\n    color: theme.palette.orange.dark,\n    marginLeft: \"15px\",\n  },\n  errorDark: {\n    color: theme.palette.orange.dark,\n  },\n}));\n\nconst PopularCard = () => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Card>\n      <CardContent>\n        <Grid container spacing={gridSpacing}>\n          <Grid item xs={12}>\n            <Grid\n              container\n              alignContent=\"center\"\n              justifyContent=\"space-between\"\n            >\n              <Grid item>\n                <Typography variant=\"h4\">Popular Stocks</Typography>\n              </Grid>\n              <Grid item>\n                <MoreHorizOutlinedIcon\n                  fontSize=\"small\"\n                  className={classes.primaryLight}\n                  aria-controls=\"menu-popular-card\"\n                  aria-haspopup=\"true\"\n                  onClick={handleClick}\n                />\n                <Menu\n                  id=\"menu-popular-card\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={Boolean(anchorEl)}\n                  onClose={handleClose}\n                  variant=\"selectedMenu\"\n                  anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"right\",\n                  }}\n                  transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\",\n                  }}\n                >\n                  <MenuItem onClick={handleClose}> Today</MenuItem>\n                  <MenuItem onClick={handleClose}> This Month</MenuItem>\n                  <MenuItem onClick={handleClose}> This Year </MenuItem>\n                </Menu>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <BajajCard />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container direction=\"column\">\n              <Grid item>\n                <Grid\n                  container\n                  alignItems=\"center\"\n                  justifyContent=\"space-between\"\n                >\n                  <Grid item>\n                    <Typography variant=\"subtitle1\" color=\"inherit\">\n                      Bajaj Finsery\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Grid\n                      container\n                      alignItems=\"center\"\n                      justifyContent=\"space-between\"\n                    >\n                      <Grid item>\n                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                          $1839.00\n                        </Typography>\n                      </Grid>\n                      <Grid item>\n                        <Avatar\n                          variant=\"rounded\"\n                          className={classes.avatarSuccess}\n                        >\n                          <KeyboardArrowUpOutlinedIcon\n                            fontSize=\"small\"\n                            color=\"inherit\"\n                          />\n                        </Avatar>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"subtitle2\" className={classes.successDark}>\n                  10% Profit\n                </Typography>\n              </Grid>\n            </Grid>\n            <Divider className={classes.divider} />\n            <Grid container direction=\"column\">\n              <Grid item>\n                <Grid\n                  container\n                  alignItems=\"center\"\n                  justifyContent=\"space-between\"\n                >\n                  <Grid item>\n                    <Typography variant=\"subtitle1\" color=\"inherit\">\n                      TTML\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Grid\n                      container\n                      alignItems=\"center\"\n                      justifyContent=\"space-between\"\n                    >\n                      <Grid item>\n                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                          $100.00\n                        </Typography>\n                      </Grid>\n                      <Grid item>\n                        <Avatar\n                          variant=\"rounded\"\n                          className={classes.avatarError}\n                        >\n                          <KeyboardArrowDownOutlinedIcon\n                            fontSize=\"small\"\n                            color=\"inherit\"\n                          />\n                        </Avatar>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"subtitle2\" className={classes.errorDark}>\n                  10% loss\n                </Typography>\n              </Grid>\n            </Grid>\n            <Divider className={classes.divider} />\n            <Grid container direction=\"column\">\n              <Grid item>\n                <Grid\n                  container\n                  alignItems=\"center\"\n                  justifyContent=\"space-between\"\n                >\n                  <Grid item>\n                    <Typography variant=\"subtitle1\" color=\"inherit\">\n                      Reliance\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Grid\n                      container\n                      alignItems=\"center\"\n                      justifyContent=\"space-between\"\n                    >\n                      <Grid item>\n                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                          $200.00\n                        </Typography>\n                      </Grid>\n                      <Grid item>\n                        <Avatar\n                          variant=\"rounded\"\n                          className={classes.avatarSuccess}\n                        >\n                          <KeyboardArrowUpOutlinedIcon\n                            fontSize=\"small\"\n                            color=\"inherit\"\n                          />\n                        </Avatar>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"subtitle2\" className={classes.successDark}>\n                  10% Profit\n                </Typography>\n              </Grid>\n            </Grid>\n            <Divider className={classes.divider} />\n            <Grid container direction=\"column\">\n              <Grid item>\n                <Grid\n                  container\n                  alignItems=\"center\"\n                  justifyContent=\"space-between\"\n                >\n                  <Grid item>\n                    <Typography variant=\"subtitle1\" color=\"inherit\">\n                      TTML\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Grid\n                      container\n                      alignItems=\"center\"\n                      justifyContent=\"space-between\"\n                    >\n                      <Grid item>\n                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                          $189.00\n                        </Typography>\n                      </Grid>\n                      <Grid item>\n                        <Avatar\n                          variant=\"rounded\"\n                          className={classes.avatarError}\n                        >\n                          <KeyboardArrowDownOutlinedIcon\n                            fontSize=\"small\"\n                            color=\"inherit\"\n                          />\n                        </Avatar>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"subtitle2\" className={classes.errorDark}>\n                  10% loss\n                </Typography>\n              </Grid>\n            </Grid>\n            <Divider className={classes.divider} />\n            <Grid container direction=\"column\">\n              <Grid item>\n                <Grid\n                  container\n                  alignItems=\"center\"\n                  justifyContent=\"space-between\"\n                >\n                  <Grid item>\n                    <Typography variant=\"subtitle1\" color=\"inherit\">\n                      Suzlon\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Grid\n                      container\n                      alignItems=\"center\"\n                      justifyContent=\"space-between\"\n                    >\n                      <Grid item>\n                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                          $189.00\n                        </Typography>\n                      </Grid>\n                      <Grid item>\n                        <Avatar\n                          variant=\"rounded\"\n                          className={classes.avatarError}\n                        >\n                          <KeyboardArrowDownOutlinedIcon\n                            fontSize=\"small\"\n                            color=\"inherit\"\n                          />\n                        </Avatar>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"subtitle2\" className={classes.errorDark}>\n                  10% loss\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </CardContent>\n      <CardActions className={classes.cardAction}>\n        <Button size=\"small\" color=\"primary\" disableElevation>\n          View All\n          <ChevronRightOutlinedIcon />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default PopularCard;\n","import React from \"react\";\nimport {\n  G2,\n  Chart,\n  Geom,\n  Axis,\n  Tooltip,\n  Coord,\n  Label,\n  Legend,\n  View,\n  Guide,\n  Shape,\n  Facet,\n  Util,\n  Point,\n  Interval\n} from \"bizcharts\";\nimport {\n   Avatar,\n   Card,\n   CardContent,\n   Grid,\n   makeStyles,\n   Menu,\n   MenuItem,\n   // Typography,\n } from \"@material-ui/core\";\n import { Typography } from \"antd\";\n const { Title } = Typography;\n\nexport default function Users (props) {\n    var data = [\n      {\n        name: \"John\",\n        vote: 35654\n      },\n      {\n        name: \"Damon\",\n        vote: 65456\n      },\n      {\n        name: \"Patrick\",\n        vote: 45724\n      },\n      {\n        name: \"Mark\",\n        vote: 13654\n      }\n    ];\n    var imageMap = {\n      // John: \"https://zos.alipayobjects.com/rmsportal/mYhpaYHyHhjYcQf.png\",\n      // Damon: \"https://zos.alipayobjects.com/rmsportal/JBxkqlzhrlkGlLW.png\",\n      // Patrick: \"https://zos.alipayobjects.com/rmsportal/zlkGnEMgOawcyeX.png\",\n      // Mark: \"https://zos.alipayobjects.com/rmsportal/KzCdIdkwsXdtWkg.png\"\n    };\n    const scale = {\n      vote: {\n        min: 0\n      }\n    };\n    return (\n      <Card>\n      <CardContent >\n      <Title level={4}>{props.title}</Title>\n        <Chart\n          data={props.data}\n          padding={[60, 20, 40, 60]}\n          scale={scale}\n          autoFit\n          height={305}\n        >\n          <Axis\n            name=\"count\"\n            labels={null}\n            title={null}\n            line={null}\n            tickLine={null}\n          />\n          <Interval\n            position=\"role*count\"\n            color={[\"role\", [\"#7f8da9\", \"#fec514\", \"#db4c3c\", \"#daf0fd\"]]}\n          />\n          <Tooltip />\n          <Interval \n            position=\"role*count\"\n            label=\"role\"\n          />\n        </Chart>\n        </CardContent>\n    </Card>\n    );\n  \n}\n\n\n","import React, { useState, useEffect } from \"react\";\nimport { Chart, Point, Line, Axis, Area, Tooltip, Coordinate } from \"bizcharts\";\nimport DataSet from \"@antv/data-set\";\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  makeStyles,\n  Menu,\n  MenuItem,\n  //   Typography,\n} from \"@material-ui/core\";\nimport { Typography } from \"antd\";\n\nconst { Title } = Typography;\n\nfunction Visit(props) {\n  const { DataView } = DataSet;\n\n  const dv = new DataView().source(props.data.data);\n  dv.transform({\n    type: \"fold\",\n    fields: props.data.types,\n    key: \"user\", // key字段\n    value: \"score\", // value字段\n  });\n\n  return (\n    <Card>\n      <CardContent>\n        <Title level={4}>{props.title}</Title>\n        <Chart\n          height={250}\n          data={dv?.rows}\n          autoFit\n          scale={{\n            score: {\n              //   min: 0,\n              //   max: 80,\n            },\n          }}\n          interactions={[\"legend-highlight\"]}\n        >\n          <Coordinate type=\"polar\" radius={0.8} />\n          <Tooltip shared />\n          <Point\n            position=\"item*score\"\n            color={[\"user\", props.colors]}\n            shape=\"circle\"\n          />\n          <Line position=\"item*score\" color={[\"user\", props.colors]} size=\"2\" />\n          <Area position=\"item*score\" color={[\"user\", props.colors]} />\n          {\n            // 棱角和圆形，默认圆形\n          }\n          <Axis name=\"score\" grid={{ line: { type: \"line\" } }} />\n          {\n            // 不需要轴的最外圈\n          }\n          <Axis name=\"item\" line={false} />\n        </Chart>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default Visit;\n","import React from \"react\";\nimport {\n  G2,\n  Chart,\n  Geom,\n  Axis,\n  Tooltip,\n  Coord,\n  Label,\n  Legend,\n  View,\n  Guide,\n  Shape,\n  Interval,\n  Facet,\n  Util\n} from \"bizcharts\";\nimport DataSet from \"@antv/data-set\";\nimport {\n   Avatar,\n   Card,\n   CardContent,\n   Grid,\n   \n   makeStyles,\n   Menu,\n   MenuItem,\n   // Typography,\n } from \"@material-ui/core\";\n import { Typography } from \"antd\";\n const { Title } = Typography;\n\n\n\n\n\nexport default function Clusteredstacked (props)  {\n\n    \n \n  \n    return (<Card>\n      <CardContent >\n      <Title level={4}>{props.title}</Title>\n      <Chart height={300} padding=\"auto\" data={props.data.data} autoFit>\n      <Interval\n        adjust={[\n         {\n            type: 'dodge',\n            marginRatio: 0,\n          },\n        ]}\n        color={[\"visit_type\",props.colors]}\n        position=\"actor*order_count\"\n      />\n      <Tooltip shared />\n      <Legend dx={20} name='visit_type' visible={true} />\n\n    </Chart>\n        </CardContent>\n    </Card>\n    );\n  \n}\n","import React from \"react\";\nimport {\n  G2,\n  Chart,\n  Geom,\n  Axis,\n  Tooltip,\n  Coord,\n  Label,\n  Legend,\n  View,\n  Guide,\n  Shape,\n  Facet,\n  Util,\n  Point,\n  Interval\n} from \"bizcharts\";\nimport {\n   Avatar,\n   Card,\n   CardContent,\n   Grid,\n   makeStyles,\n   Menu,\n   MenuItem,\n   // Typography,\n } from \"@material-ui/core\";\n import { Typography } from \"antd\";\n\nconst { Title } = Typography;\n\nexport default function Users (props){\n\n\n\n\n    var imageMap = {\n      // John: \"https://zos.alipayobjects.com/rmsportal/mYhpaYHyHhjYcQf.png\",\n      // Damon: \"https://zos.alipayobjects.com/rmsportal/JBxkqlzhrlkGlLW.png\",\n      // Patrick: \"https://zos.alipayobjects.com/rmsportal/zlkGnEMgOawcyeX.png\",\n      // Mark: \"https://zos.alipayobjects.com/rmsportal/KzCdIdkwsXdtWkg.png\"\n    };\n    const scale = {\n      vote: {\n        min: 0\n      }\n    };\n    return (    <Card>\n      <CardContent >\n      <Title level={4}>{props.title}</Title>\n\n        <Chart\n          data={props?.newData?.map((e)=>({\n            name:props?.labels?.[e[props.status]],\n           count: e.count,\n           \"sum price\":props.type=='count'?e.count:`${e.sum_price} £`\n           \n           }))}\n          padding={[60, 20, 40, 60]}\n          scale={scale}\n          autoFit\n          height={250}\n        >\n          <Axis\n            name=\"count\"\n            labels={null}\n            title={null}\n            line={null}\n            tickLine={null}\n          />\n          {/* <Interval\n            position=\"name*count\"\n            \n          /> */}\n               {/* <Point\n            position=\"name*count\"\n            size={60}\n            shape={[\n              \"name\",\n              function(name) {\n                return [\"image\", imageMap[name]];\n              }\n            ]}\n          /> */}\n          <Tooltip />\n          <Legend name='name' visible={false} />\n\n          <Interval \n            position=\"name*count\"\n            label=\"sum price\"\n            color={[\"name\", props.colors]}\n\n          />\n        </Chart>\n        </CardContent>\n    </Card>\n    );\n  \n}\n\n\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  Chart,\n  Interval,\n  Tooltip,\n  Axis,\n  Coordinate,\n  Interaction,\n  getTheme,\n} from \"bizcharts\";\nimport {\n   Avatar,\n   Card,\n   CardContent,\n   Grid,\n   makeStyles,\n   Menu,\n   MenuItem,\n   // Typography,\n } from \"@material-ui/core\";\n import { Typography } from \"antd\";\n const { Title } = Typography;\nconst Charts = (props) => {\n   if(props&&props.data){\n            props.data.length = 4\n\n\n         \n           }\n\n\n  const cols = {\n    percent: {\n      formatter: (val) => {\n        val = val * 100 + \"%\";\n        return val;\n      },\n    },\n  };\n//   const [mychart, setmychart] = useState([]);\n//   useEffect(() => {\n//      if(props&&props.data){\n//       props.data.length = 4\n   \n\n//        setData(data);\n//      }\n     \n//   }, []);\nconst data = [\n   { role: 'Doctor', count: 40, percent: 0.4 },\n   { role: 'Nurse', count: 21, percent: 0.21 },\n   { role: '事例三', count: 17, percent: 0.17 },\n   { role: '事例四', count: 13, percent: 0.13 },\n];\n\n  return (\n      <Card>\n      <CardContent >\n      <Title level={4}>{props.title}</Title>\n      <Chart height={250} data={   props?.data?.map((e)=>({\n\nrole: e.role.charAt(0).toUpperCase() + e.role.slice(1),\ncount: e.count,\npercent:\n  Math.round(\n    (e.count /\n      props.data.reduce(\n        (ac, current) => ac + current.count,\n        0\n      )) *\n      100\n  ) / 100,\n}))} scale={cols} autoFit>\n\t\t\t<Coordinate type=\"theta\" radius={0.75} />\n\t\t\t<Tooltip showTitle={false} />\n\t\t\t<Axis visible={false} />\n\t\t\t<Interval\n\t\t\t\tposition=\"percent\"\n\t\t\t\tadjust=\"stack\"\n            color={[\"role\", props.colors]}\n\t\t\t\tstyle={{\n\t\t\t\t\tlineWidth: 1,\n\t\t\t\t\tstroke: '#fff',\n\t\t\t\t}}\n\t\t\t\tlabel={['count', {\n\t\t\t\t\tcontent: (data) => {\n\t\t\t\t\t\treturn `${data.role}:  ${data.count } `;\n\t\t\t\t\t},\n\t\t\t\t}]}\n\t\t\t\tstate={{\n\t\t\t\t\tselected: {\n\t\t\t\t\t\tstyle: (t) => {\n\t\t\t\t\t\t\tconst res = getTheme().geometries.interval.rect.selected.style(t);\n\t\t\t\t\t\t\treturn { ...res, fill: 'red' }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Interaction type='element-single-selected' />\n\t\t</Chart>\n      </CardContent>\n    </Card>\n    \n  );\n};\nexport default Charts;\n\n","import React,{useState} from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport EarningCard from \"@iso/Mcomponents/cards/EarningCard\";\nimport EarningCard2 from \"@iso/Mcomponents/cards/EarningCard/index2\";\nimport TotalChartCard from \"@iso/Mcomponents/cards/TotalChartCard\";\nimport TotalIncomePatternCard from \"@iso/Mcomponents/cards/TotalIncomePatternCard\";\nimport TotalIncomeCard from \"@iso/Mcomponents/cards/TotalIncomeCard\";\nimport ChartCard from \"@iso/Mcomponents/cards/ChartCard\";\nimport PopularCard from \"@iso/Mcomponents/cards/PopularCard\";\nimport Snackbar from \"@iso/Mcomponents/extended/Snackbar\";\nimport axios, { URL } from \"../../library/helpers/axios\";\nimport {\n  Chart,\n  Interval,\n  Tooltip,\n  Axis,\n  Coordinate\n} from 'bizcharts';\nimport Users from './users'\nimport Visit from './visit'\nimport VisitsOthers from './visitsOthers'\n\nimport Order from './order'\nimport Partners from './Partners'\nimport LoaderWave from \"@iso/Mcomponents/extended/Loader/loaderWave\";\n\nexport const gridSpacing = 3;\nexport const drawerWidth = 260;\nconst Dashboard = () => {\n  const dispatch = useDispatch();\nconst [data , setData ] = React.useState(null)\nconst [loading , setLoading ] = React.useState(false)\n  dispatch({\n    type: \"SET\",\n    payload: [],\n  });\n\n  const [chartData, setChartData] = useState(null);\n  const [chartDataNew, setChartDataNew] = useState(null);\n  const [paitent, setPitent] = useState(null);\n\n\n  const fetchData = () => {\n    setLoading(true);\n\n    const params = {\n \n    };\n\n    setLoading(true);\n    axios['get']('statistics', {\n      headers: {\n        // Authorization: `Bearer ${token}`,\n      },\n      params,\n    })\n      .then((res) => {\n   \n        setData(res.data.data);\n\n\n//// transform data for visits chart for video call and home visit and urgent visit\n        const data = [\n          { item: \"video_call\" },\n          { item: \"home_visit\" },\n          { item: \"urgent_visit\" },\n          // { item: \"long_stay_am\" },\n          // { item: \"long_stay_pm\" },\n          // { item: \"isolation\" },\n          // { item: \"create_plan\" },\n          // { item: \"execute_plan_1\" },\n          // { item: \"execute_plan_6\" },\n          // { item: \"execute_plan_12\" },\n          // { item: \"execute_plan_24\" },\n        ];\n        data.map((main, mainIndex) => {\n          res &&\n            res.data &&res.data.data&&\n            res.data.data.visits.map((old) => {\n              if (data[mainIndex][old.actor.charAt(0).toUpperCase() + old.actor.slice(1)] == undefined) {\n                data[mainIndex][old.actor.charAt(0).toUpperCase() + old.actor.slice(1)] = 0;\n              }\n    \n              if (main.item == old.visit_type) {\n                data[mainIndex][old.actor.charAt(0).toUpperCase() + old.actor.slice(1)] = old.order_count;\n  \n               \n              }\n            });\n                         let str =data[mainIndex]['item'].replaceAll(\"_\" ,\" \")\n                 data[mainIndex]['item'] = str.charAt(0).toUpperCase() + str.slice(1);\n        });\n\n        setChartData({data,types:['Doctor','Nurse' ,'Physiotherapist', 'Technician']});\n/////////\n//// transform data for visits chart for video call and home visit and urgent visit\n// const _data = [\n\n//   { item: \"long_stay_am\" },\n//   { item: \"long_stay_pm\" },\n//   { item: \"isolation\" },\n//   { item: \"create_plan\" },\n//   { item: \"execute_plan_1\" },\n//   { item: \"execute_plan_6\" },\n//   { item: \"execute_plan_12\" },\n//   { item: \"execute_plan_24\" },\n// ];\n\n\n// _data.map((main, mainIndex) => {\n//   res &&\n//     res.data &&res.data.data&&\n//     res.data.data.visits.map((old) => {\n//       if (_data[mainIndex][old.actor.charAt(0).toUpperCase() + old.actor.slice(1)] == undefined) {\n//         _data[mainIndex][old.actor.charAt(0).toUpperCase() + old.actor.slice(1)] = 1;\n//       }\n\n//       if (main.item == old.visit_type) {\n//         _data[mainIndex][old.actor.charAt(0).toUpperCase() + old.actor.slice(1)] = old.order_count;\n\n       \n//       }\n//     });\n//                  let str =_data[mainIndex]['item'].replaceAll(\"_\" ,\" \")\n//                  _data[mainIndex]['item'] = str.charAt(0).toUpperCase() + str.slice(1);\n// });\n\n\nlet _data = res.data.data.visits.filter((e)=>e.visit_type!=='video_call'||e.visit_type!=='urgent_visit'||e.visit_type!=='home_visit').map(({order_count,actor,visit_type})=>({\n\n   visit_type: (visit_type.charAt(0).toUpperCase() + visit_type.slice(1)).replaceAll(\"_\" ,\" \"), actor:actor.charAt(0).toUpperCase() + actor.slice(1)  , order_count\n\n\n  \n}))\n\nsetChartDataNew({data:_data});\n\n// total paitent\nlet allPaitent = res.data.data?.users?.filter(e=>e?.role=='patient')?.[0]?.['count']\nsetPitent(allPaitent)\n        setLoading(false);\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n\n  React.useEffect(()=>{\n    fetchData()\n\n  },[])\n  return (!loading?\n    <div style={{ margin: \"20px\", marginTop: \"50px\" }}>\n      <Grid container spacing={gridSpacing}>\n\n\n      \n\n\n\n      <Grid item xs={12}>\n          <Grid container spacing={gridSpacing}>\n          <Grid item lg={4} md={4} sm={12} xs={12}>\n          <EarningCard data={data?.noOfApplications} label={'Number Of Applications'} color=\"orange\" />\n            </Grid>\n            <Grid item lg={4} md={4} sm={12} xs={12}>\n              <TotalChartCard data={data?.noOfRegistrations} title={'Number Of Registrations'} />\n            </Grid>\n\n            <Grid item lg={4} md={4} sm={12} xs={12}>\n              <EarningCard2 data={data?.noOfApplications +' £'} label={'Profit'} />\n            </Grid>\n  \n      \n          </Grid>\n        </Grid>\n\n\n{/* \n        <Grid item xs={12}>\n          <Grid container spacing={gridSpacing}>\n            <Grid item lg={6} md={6} sm={6} xs={12}>\n            <Partners colors={[\"green\", \"orange\", \"blue\", \"yellow\"] }  data={data?.users} title=\"Partners\" />\n\n    \n            </Grid>\n            <Grid item lg={6} md={6} sm={6} xs={12}>\n             \n            <Order type=\"count\" title=\"Order Status\" newData={data?.orders} labels={{\n                1:\"Pending\",\n                6:\"Done\",\n                3:\"Reject\",\n                4:\"Cancel\",\n                5:\"Draft\",\n                2:\"Accept\"\n              }} status='order_status' colors={[\"green\", \"orange\", \"yellow\", \"red\"]} />\n            </Grid>\n \n          </Grid>\n        </Grid> */}\n\n\n\n\n\n{/* \n        <Grid item xs={12}>\n          <Grid container spacing={gridSpacing}>\n            <Grid item lg={6} md={6} sm={6} xs={12}>\n  \n            { chartData&& <Visit  colors={[\"green\", \"orange\", \"yellow\", \"red\"]} title=\"Visits\" data={chartData} />}\n\n            </Grid>\n            <Grid item lg={6} md={6} sm={6} xs={12}>\n             \n            <Order title=\"Order Payments\"newData={data?.payments} labels={{\n                1:\"Pending\",\n                2:\"Done\",\n                3:\"Refund\",\n                4:\"Partially\"\n              }} status=\"payment_status\"colors={[\"green\", \"blue\", \"red\", \"yellow\"] } />\n\n            </Grid>\n \n          </Grid>\n        </Grid> */}\n\n\n\n\n\n{/* \n        <Grid item xs={12}>\n          <Grid container spacing={gridSpacing}>\n            <Grid item xs={12} sm={12} md={12}>\n\n\n            { chartDataNew&& <VisitsOthers  colors={[\"green\", \"orange\", \"yellow\", \"red\"]} title=\"Other Visits\" data={chartDataNew} />}\n\n            </Grid>\n\n\n            <Grid item xs={12} sm={12} md={12}>\n\n\n\n            \n            <Grid item xs={12} sm={12} md={12} >\n\n            </Grid>\n\n            <Grid item xs={12} sm={12} md={12}>\n            </Grid>\n\n\n            </Grid>\n          </Grid>\n        </Grid> */}\n\n\n      </Grid>\n    </div>:<LoaderWave />\n  );\n};\n\nexport default Dashboard;\n\n\n\n\n\n\n\n\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/earning.7bfcfc0c.svg\";"],"sourceRoot":""}