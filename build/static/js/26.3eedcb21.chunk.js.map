{"version":3,"sources":["containers/admins/add.jsx","components/new/CardWraper/index.jsx","components/new/PageWraper/index.jsx","containers/admins/config.js"],"names":["Option","Dragger","cancleButton","background","color","padding","border","marginLeft","NewCountry","props","useState","isSubmiting","setSubmiting","history","useHistory","cat","setCat","params","useParams","id","loading","setLoading","permissions","setPermissions","uplodedList","setUplodedList","dispatch","useDispatch","localStorage","getItem","useEffect","enstance","get","headers","then","res","data","config","api","show","method","type","payload","key","routes","indexKey","to","index","title","indexTitle","titles","edit","add","useForm","form","className","span","style","marginTop","layout","name","onFinish","values","password_confirmation","password","console","log","formData","FormData","append","roles","map","e","toast","promise","pending","success","render","push","message","icon","error","err","response","initialValues","is_active","scrollToFirstError","autoComplete","Item","label","tooltip","rules","required","whitespace","translate","placeholder","value","hasFeedback","Password","dependencies","getFieldValue","validator","_","Promise","reject","Error","resolve","mode","beforeUpload","file","fileList","multiple","listType","progress","strokeColor","strokeWidth","format","percent","parseFloat","toFixed","onRemove","display","marginBottom","opacity","length","pointerEvents","image","width","alignItems","height","src","textAlign","styles","handleClick","CardWraper","Styled","div","PageWraper","styled","pages","delete","privateSub","path","replace","slice","isActive","1","0"],"mappings":"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","file":"static/js/26.3eedcb21.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"@ant-design/compatible/assets/index.css\";\nimport { Select, Row, Input, Col, Form,Image,Upload } from \"antd\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport CardWraper from \"../../components/new/CardWraper\";\nimport PageWraper from \"../../components/new/PageWraper\";\nimport CustomButton from \"../../components/new/CustomButton\";\nimport Loader from \"../../components/new/loader\";\nimport enstance from \"../../library/helpers/axios\";\nimport { useDispatch } from \"react-redux\";\nimport IntlMessages from \"@iso/components/utility/intlMessages\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport config from \"./config\";\nimport { toast } from \"react-toastify\";\nconst { Option } = Select;\nconst { Dragger } = Upload;\n\nconst NewCountry = (props) => {\n  const [isSubmiting, setSubmiting] = useState(false);\n  const history = useHistory();\n  const [cat, setCat] = useState(null);\n  const params = useParams();\n\n  const [loading, setLoading] = useState(params?.id);\n  const [permissions, setPermissions] = useState(false);\n  const [uplodedList, setUplodedList] = useState([]);\n  \n  const dispatch = useDispatch();\n\n  const getLang = localStorage.getItem(\"lang\");\n  useEffect(() => {\n    enstance\n      .get(`roles`, {\n        headers: {},\n      })\n      .then((res) => {\n        setPermissions(res.data.data);\n      });\n  }, []);\n  useEffect(() => {\n    if (params.id) {\n      enstance[config?.api?.show?.[0]?.method](\n        `${config?.api?.show?.[1]}${params.id}`,\n        {\n          headers: {},\n        }\n      ).then((res) => {\n        setCat(res.data.data);\n        setLoading(false);\n\n      });\n    }\n    \n  }, []);\n\n  dispatch({\n    type: \"SET\",\n    payload: [\n      {\n        key: config.routes.indexKey,\n        to: config.routes.index,\n        title: config.routes.indexTitle,\n      },\n      {\n        key: params.id ? config.titles.edit : config.titles.add,\n        to: params.id ? `${config.routes.edit}${params.id}` : config.routes.add,\n        title: params.id ? config.titles.edit : config.titles.add,\n      },\n    ],\n  });\n  const [form] = Form.useForm();\n\n  const onFinish = (values) => {\n    if(params&&!values.password_confirmation){\n      delete values.password_confirmation\n    }\n    if(params&&!values.password){\n      delete values.password\n    }\n    console.log(\"Received values of form: \", values);\n    setSubmiting(true);\n\n    const formData = new FormData();\n    if(params){\n    formData.append(\"_method\", \"PUT\");\n    }\n    if (uplodedList[0]) {\n      formData.append(\"image\", uplodedList[0]);\n    }\n    values.roles.map(e=>formData.append('roles[]',e))\ndelete values.roles\n    for (let key in values) {\n      formData.append(key, values[key]);\n    }\n\n\n\n    toast.promise(\n      enstance[\n        cat ? config?.api?.add?.[0]?.method : config?.api?.add?.[0]?.method\n      ](\n        cat ? `${config?.api?.edit?.[1]}${params?.id}` : config?.api?.add?.[1],\n        formData,\n        {\n          headers: {},\n        }\n      ),\n      {\n        pending: \"Pending\",\n        success: {\n          render(res) {\n            setSubmiting(false);\n            history.push(config.routes.index);\n            return `👌 ${res.data.data.message}`;\n          },\n          // other options\n          icon: \"🟢\",\n        },\n        error: {\n          render(err) {\n            setSubmiting(false);\n            return `🤯 ${\n              err?.data?.response?.data?.message || \"Backend Error Occured\"\n            }`;\n          },\n          // other options\n          //    icon: \"🟢\",\n        },\n      }\n    );\n  };\n \n\n  return (\n    <PageWraper>\n      <div className=\"new_user_container\">\n        <Row>\n          <Col span={24} style={{ marginTop: \"1rem\" }}>\n            <CardWraper>\n              {loading ? (\n                <Loader />\n              ) : (\n                <Row>\n                  <Col span={24}>\n               <Form\n                      form={form}\n                      layout=\"vertical\"\n                      name=\"register\"\n                      onFinish={onFinish}\n                      initialValues={params ?{...cat,roles:cat?.roles?.map(e=>+e.id)}: { is_active: 1 }  }\n                      scrollToFirstError\n                      autoComplete={false}\n                    >\n                      <Form.Item\n                        name=\"name\"\n                        label=\"name\"\n                        tooltip=\"What do you want others to call you?\"\n                        rules={[\n                          {\n                            required: !params,\n                            message: \"Please input your name!\",\n                            whitespace: true,\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        name=\"email\"\n                        label=\"E-mail\"\n                        rules={[\n                          {\n                            type: \"email\",\n                            message: \"The input is not valid E-mail!\",\n                          },\n                          {\n                            required: !params,\n                            message: \"Please input your E-mail!\",\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        name=\"is_active\"\n                        label={\"is_active\".translate()}\n                        rules={[\n                          {\n                            required: !params,\n                            message: \"Please select a status!\",\n                          },\n                        ]}\n                      >\n                        <Select placeholder=\"select status\">\n                          <Option value={1}>Active</Option>\n                          <Option value={0}>Not Active</Option>\n                        </Select>\n                      </Form.Item>\n                      <Form.Item\n                        name=\"password\"\n                        label=\"Password\"\n                        rules={[\n                          {\n                            required: !params,\n                            message: \"Please input your password!\",\n                          },\n                        ]}\n                        hasFeedback\n                      >\n                        <Input.Password   />\n                      </Form.Item>\n\n                      <Form.Item\n                        name=\"password_confirmation\"\n                        label=\"Confirm Password\"\n                        dependencies={[\"password\"]}\n                        hasFeedback\n                        rules={[\n                          {\n                            required: !params,\n                            message: \"Please confirm your password!\",\n                          },\n                          ({ getFieldValue }) => ({\n                            validator(_, value) {\n                              if (\n                                !value ||\n                                getFieldValue(\"password\") === value\n                              ) {\n                                return Promise.resolve();\n                              }\n\n                              return Promise.reject(\n                                new Error(\n                                  \"The two passwords that you entered do not match!\"\n                                )\n                              );\n                            },\n                          }),\n                        ]}\n                      >\n                        <Input.Password />\n                      </Form.Item>\n                      <Form.Item\n                        name=\"roles\"\n                        label={\"roles\".translate()}\n                        rules={[\n                          {\n                            required: !params,\n                            message: \"Please select a role!\",\n                          },\n                        ]}\n                      >\n                        <Select mode=\"multiple\" placeholder=\"select a role\">\n                          {permissions&&permissions?.map(({ id, name }) => (\n                            <Option value={+id}>{name}</Option>\n                          ))}\n                        </Select>\n                      </Form.Item>\n\n\n\n\n                      <Dragger\n                        beforeUpload={(file) => {\n                          setUplodedList([file]);\n                          return false;\n                        }}\n                        fileList={uplodedList}\n                        multiple={false}\n                        listType=\"picture-card\"\n                        // onPreview={handlePreview}\n                        progress={{\n                          strokeColor: {\n                            \"0%\": \"#108ee9\",\n                            \"100%\": \"#87d068\",\n                          },\n                          strokeWidth: 4,\n                          format: (percent) =>\n                            `${parseFloat(percent.toFixed(1))}%`,\n                        }}\n                        onRemove={(e) => {\n                          setUplodedList([]);\n                        }}\n                        // onRemove={(e) => {\n                        //   console.log(e);\n\n                        //   enstance\n                        //     .post(\n                        //       \"/deleteMedia\",\n                        //       {\n                        //         model: \"User\",\n                        //         modelID: e.uid,\n                        //       },\n                        //       {\n                        //         headers: {\n                        //           // Authorization: `Bearer ${token}`,\n                        //         },\n                        //       }\n                        //     )\n                        //     .then((res) => {\n                        //       message.success(\n                        //         getLang() && getLang() == \"ar\"\n                        //           ? \"تم المسح بنجاح\"\n                        //           : \"Deleted successfully\"\n                        //       );\n                        //       setFileListEn([]);\n                        //     })\n                        //     .catch((err) => {\n                        //       if (\n                        //         err.response &&\n                        //         err.response.data &&\n                        //         err.response.data.message\n                        //       ) {\n                        //         const text = err.response.data.message;\n                        //         message.error(text);\n                        //       }\n                        //     });\n                        // }}\n                        style={{\n                          display: \"inline-flex\",\n                          marginBottom: \"10px\",\n                          opacity: uplodedList.length >= 1 ? \"50%\" : \"100%\",\n                          pointerEvents:\n                            uplodedList.length >= 1 ? \"none\" : \"auto\",\n                        }}\n                      >\n                        <p className=\"ant-upload-drag-icon\">\n                          <InboxOutlined style={{ color: \"#1b5b7e\" }} />\n                        </p>\n                        <p className=\"ant-upload-text\">\n                          <IntlMessages id=\"upload_image\" />\n                        </p>\n                        <p className=\"ant-upload-hint\"></p>\n                      </Dragger>\n\n                      {cat?.image && (\n                        <div\n                          style={{\n                            width: \"fit-content\",\n                            border: \"1px solid #c4c1c1\",\n                            padding: \"10px\",\n                            alignItems: \"center\",\n                            display: \"flex\",\n                          }}\n                        >\n                          <Image width={100} height={100} src={cat?.image} />\n                        </div>\n                      )}\n\n\n                      <Form.Item>\n                        <div\n                          style={{\n                            display: \"block\",\n                            marginTop: \"1.2rem\",\n                            textAlign: \"center\",\n                          }}\n                        >\n                          <CustomButton\n                            styles={{ padding: \".7rem 4rem\" }}\n                            type=\"submit\"\n                          >\n                            {isSubmiting && <Loader />}\n                            <span>\n                              {\" \"}\n                              {params.id ? (\n                                <IntlMessages id=\"global.submit\" />\n                              ) : (\n                                <IntlMessages id=\"global.submit\" />\n                              )}{\" \"}\n                            </span>\n                          </CustomButton>\n                          <CustomButton\n                            type=\"button\"\n                            handleClick={() => {\n                              history.push(config.routes.index);\n                            }}\n                            styles={cancleButton}\n                          >\n                            <IntlMessages id=\"global.cancel\" />\n                          </CustomButton>\n                        </div>\n                      </Form.Item>\n                    </Form>\n                  </Col>\n                </Row>\n              )}\n            </CardWraper>\n          </Col>\n        </Row>\n      </div>\n    </PageWraper>\n  );\n};\n\nconst inputStyle = {\n  width: \"100%\",\n  border: \"1px solid #02a79f \",\n  borderRadius: \"0.4rem\",\n};\n\nconst cancleButton = {\n  background: \"white\",\n  color: \"#02a79f \",\n  padding: \".7rem 3rem\",\n  border: \"1px solid #02a79f \",\n  marginLeft: \"1rem\",\n};\n\nexport default NewCountry;\n","import Styled from \"styled-components\";\n\nconst CardWraper = Styled.div`\n    width: 100%;\n    box-shadow: 0px 2px 6px #0000000A;\n    border-radius: 13px;\n    background: #FFFFFF 0% 0% no-repeat padding-box; \n    padding : 1rem 2rem;\n    height: 100%;\n \n    overflow: hidden ;\n`;\nexport default CardWraper;\n","import styled from \"styled-components\";\n\nconst PageWraper = styled.div`\n  padding: 1rem;\n`;\n\nexport default PageWraper;\n","import { routes } from \"../Dashboard/DashboardRoutes\";\nimport { privateSub } from \"../../router\";\n\nconst pages = {\n  index: \"admins\",\n  add: \"adminsNew\",\n  edit: \"adminsEdit\",\n  show: \"adminsShow\",\n};\nconst config = {\n  api: {\n    index: [{ method: \"get\", params: {} }, \"admins\"],\n    add: [{ method: \"post\", params: {} }, \"admins\"],\n    edit: [{ method: \"post\", params: {} }, \"admins/\"],\n    show: [{ method: \"get\", params: {} }, \"admins/\"],\n    delete: [{ method: \"delete\", params: {} }, \"admins/\"],\n  },\n  routes: {\n    index: `${privateSub}/${routes[pages.index]?.path}`,\n    indexTitle: pages.index.replace(/([a-z])([A-Z])/g, \"$1 $2\"),\n    indexKey: \"home\",\n    add: `${privateSub}/${routes[pages.add]?.path}`,\n    edit: `${privateSub}/${routes[pages.edit]?.path.slice(\n      0,\n      routes[pages.edit].path.length - 3\n    )}`,\n    show: `${privateSub}/${routes[pages.show]?.path.slice(\n      0,\n      routes[pages.show]?.path.length - 3\n    )}`,\n  },\n  titles: {\n    add: \"Create\",\n    edit: \"global.edit\",\n    show: \"Details\",\n  },\n};\nexport const isActive = {\n  1: \"active\",\n  0: \"not active\",\n};\nexport default config;\n"],"sourceRoot":""}