{"version":3,"sources":["containers/roles/add.jsx","components/new/CardWraper/index.jsx","components/new/PageWraper/index.jsx","containers/roles/config.js"],"names":["cancleButton","Option","background","color","padding","border","marginLeft","NewCountry","props","useState","isSubmiting","setSubmiting","history","useHistory","cat","setCat","loading","setLoading","params","useParams","dispatch","useDispatch","targetKeys","setTargetKeys","mockData","setMockData","useEffect","enstance","get","headers","then","res","data","map","e","key","id","localStorage","getItem","config","api","show","method","permissions","type","payload","routes","indexKey","to","index","title","indexTitle","titles","edit","add","useForm","form","className","span","style","marginTop","layout","name","onFinish","values","console","log","permission","toast","promise","pending","success","render","push","message","icon","error","err","response","initialValues","scrollToFirstError","Item","label","translate","rules","required","whitespace","length","dataSource","oneWay","showSearch","listStyle","width","height","onChange","item","replace","display","textAlign","styles","handleClick","CardWraper","Styled","div","PageWraper","styled","pages","delete","privateSub","path","slice"],"mappings":"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","file":"static/js/28.d29dcadd.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"@ant-design/compatible/assets/index.css\";\nimport { Select, Row, Input, Col, Form } from \"antd\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport CardWraper from \"../../components/new/CardWraper\";\nimport PageWraper from \"../../components/new/PageWraper\";\nimport CustomButton from \"../../components/new/CustomButton\";\nimport Loader from \"../../components/new/loader\";\nimport enstance from \"../../library/helpers/axios\";\nimport { useDispatch } from \"react-redux\";\nimport IntlMessages from \"@iso/components/utility/intlMessages\";\nimport { Transfer, Button } from 'antd';\nimport config from \"./config\";\nimport { toast } from \"react-toastify\";\nconst { Option } = Select;\n\nconst NewCountry = (props) => {\n  const [isSubmiting, setSubmiting] = useState(false);\n  const history = useHistory();\n  const [cat, setCat] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const params = useParams();\n  const dispatch = useDispatch();\n  const [targetKeys , setTargetKeys] = useState([])\n  const [mockData , setMockData] = useState([])\n  useEffect(() => {\n    enstance\n      .get(`permissions`, {\n        headers: {},\n      })\n      .then((res) => {\n        setMockData(res.data.data.map(e=>({...e,key:e.id})));\n      });\n  }, []);\n  const getLang = localStorage.getItem(\"lang\");\n  useEffect(() => {\n    if (params.id) {\n      setLoading(true);\n      enstance[config?.api?.show?.[0]?.method](\n        `${config?.api?.show?.[1]}${params.id}`,\n        {\n          headers: {},\n        }\n      ).then((res) => {\n        setCat(res.data.data);\n        setTargetKeys(res.data.data.permissions.map(e=>e.id))\n        setLoading(false);\n\n      });\n    }\n  }, []);\n\n  dispatch({\n    type: \"SET\",\n    payload: [\n      {\n        key: config.routes.indexKey,\n        to: config.routes.index,\n        title: config.routes.indexTitle,\n      },\n      {\n        key: params.id ? config.titles.edit : config.titles.add,\n        to: params.id ? `${config.routes.edit}${params.id}` : config.routes.add,\n        title: params.id ? config.titles.edit : config.titles.add,\n      },\n    ],\n  });\n  const [form] = Form.useForm();\n\n  const onFinish = (values) => {\n    console.log(\"Received values of form: \", values);\n    values.permission=targetKeys\n    setSubmiting(true);\n    toast.promise(\n      enstance[\n        cat ? config?.api?.edit?.[0]?.method : config?.api?.add?.[0]?.method\n      ](\n        cat ? `${config?.api?.edit?.[1]}${params?.id}` : config?.api?.add?.[1],\n        values,\n        {\n          headers: {},\n        }\n      ),\n      {\n        pending: \"Pending\",\n        success: {\n          render(res) {\n            setSubmiting(false);\n            history.push(config.routes.index);\n            return `ðŸ‘Œ ${res.data.data.message}`;\n          },\n          // other options\n          icon: \"ðŸŸ¢\",\n        },\n        error: {\n          render(err) {\n            setSubmiting(false);\n            return `ðŸ¤¯ ${\n              err?.data?.response?.data?.message || \"Backend Error Occured\"\n            }`;\n          },\n          // other options\n          //    icon: \"ðŸŸ¢\",\n        },\n      }\n    );\n  };\n// {console.log(Object.entries(cat).map(([key,value])=>[key,value]))}\n\n\nconst handleChange = (targetKeys) => {\n   setTargetKeys(targetKeys)\n   console.log(targetKeys)\n};\n\n  return (\n <PageWraper>\n      <div className=\"new_user_container\">\n        <Row>\n          <Col span={24} style={{ marginTop: \"1rem\" }}>\n            <CardWraper>\n              {loading ? (\n                <Loader />\n              ) : (\n                <Row>\n                  <Col span={24}>\n                    <Form\n                      form={form}\n                      layout=\"vertical\"\n                      name=\"register\"\n                      onFinish={onFinish}\n                      initialValues={cat && cat }\n                      scrollToFirstError\n                    >\n                      <Form.Item\n                        name=\"name\"\n                        label={\"name\".translate()}\n                        rules={[\n                          {\n                            required: true,\n                            message: \"Please input your name!\",\n                            whitespace: true,\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      \n                      <Form.Item\n                        name=\"permissions\"\n                        label={\"permissions\".translate()}\n                        rules={[\n                          {\n                            required: targetKeys.length>0?false:true,\n                            message: \"Please input your permissions!\",\n                           \n                          },\n                        ]}\n                      >\n                            <Transfer\n        dataSource={mockData}\n        oneWay={true}\n        showSearch\n        listStyle={{width:\"100%\",height:400}}\n        targetKeys={targetKeys&&targetKeys}\n        onChange={handleChange}\n        render={item => ` - ${item.name.replace('_',\" \")}`}\n      />\n        </Form.Item>\n                      {/* <Form.Item\n                        name=\"title_en\"\n                        label={\"title_en\".translate()}\n                        rules={[\n                          {\n                            required: true,\n                            message: \"Please input your title en!\",\n                            whitespace: true,\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        name=\"title_ar\"\n                        label={\"title_ar\".translate()}\n                        rules={[\n                          {\n                            required: true,\n                            message: \"Please input your title ar!\",\n                            whitespace: true,\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n\n                      <Form.Item\n                        name=\"description_en\"\n                        label={\"description_en\".translate()}\n                        rules={[\n                          {\n                            required: true,\n                            message: \"Please input your description en!\",\n                            whitespace: true,\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        name=\"description_ar\"\n                        label={\"description_ar\".translate()}\n                        rules={[\n                          {\n                            required: true,\n                            message: \"Please input your description ar!\",\n                            whitespace: true,\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item> */}\n\n                      <Form.Item>\n                        <div\n                          style={{\n                            display: \"block\",\n                            marginTop: \"1.2rem\",\n                            textAlign: \"center\",\n                          }}\n                        >\n                          <CustomButton\n                            styles={{ padding: \".7rem 4rem\" }}\n                            type=\"submit\"\n                          >\n                            {isSubmiting && <Loader />}\n                            <span>\n                              {\" \"}\n                              {params.id ? (\n                                <IntlMessages id=\"global.submit\" />\n                              ) : (\n                                <IntlMessages id=\"global.submit\" />\n                              )}{\" \"}\n                            </span>\n                          </CustomButton>\n                          <CustomButton\n                            type=\"button\"\n                            handleClick={() => {\n                              history.push(config.routes.index);\n                            }}\n                            styles={cancleButton}\n                          >\n                            <IntlMessages id=\"global.cancel\" />\n                          </CustomButton>\n                        </div>\n                      </Form.Item>\n                    </Form>\n                  </Col>\n                </Row>\n              )}\n            </CardWraper>\n          </Col>\n        </Row>\n      </div>\n    </PageWraper>\n  );\n};\n\nconst inputStyle = {\n  width: \"100%\",\n  border: \"1px solid #02a79f \",\n  borderRadius: \"0.4rem\",\n};\n\nconst cancleButton = {\n  background: \"white\",\n  color: \"#02a79f \",\n  padding: \".7rem 3rem\",\n  border: \"1px solid #02a79f \",\n  marginLeft: \"1rem\",\n};\n\nexport default NewCountry;\n","import Styled from \"styled-components\";\n\nconst CardWraper = Styled.div`\n    width: 100%;\n    box-shadow: 0px 2px 6px #0000000A;\n    border-radius: 13px;\n    background: #FFFFFF 0% 0% no-repeat padding-box; \n    padding : 1rem 2rem;\n    height: 100%;\n \n    overflow: hidden ;\n`;\nexport default CardWraper;\n","import styled from \"styled-components\";\n\nconst PageWraper = styled.div`\n  padding: 1rem;\n`;\n\nexport default PageWraper;\n","import { routes } from \"../Dashboard/DashboardRoutes\";\nimport { privateSub } from \"../../router\";\n\nconst pages = {\n  index: \"roles\",\n  add: \"rolesNew\",\n  edit: \"rolesEdit\",\n  show: \"rolesShow\",\n};\nconst config = {\n  api: {\n    index: [{ method: \"get\", params: {} }, \"roles\"],\n    add: [{ method: \"post\", params: {} }, \"roles\"],\n    edit: [{ method: \"put\", params: {} }, \"roles/\"],\n    show: [{ method: \"get\", params: {} }, \"roles/\"],\n    delete: [{ method: \"delete\", params: {} }, \"roles/\"],\n  },\n  routes: {\n    index: `${privateSub}/${routes[pages.index]?.path}`,\n    indexTitle: pages.index.replace(/([a-z])([A-Z])/g, \"$1 $2\"),\n    indexKey: \"home\",\n    add: `${privateSub}/${routes[pages.add]?.path}`,\n    edit: `${privateSub}/${routes[pages.edit]?.path.slice(\n      0,\n      routes[pages.edit].path.length - 3\n    )}`,\n    show: `${privateSub}/${routes[pages.show]?.path.slice(\n      0,\n      routes[pages.show]?.path.length - 3\n    )}`,\n  },\n  titles: {\n    add: \"Create\",\n    edit: \"global.edit\",\n    show: \"Details\",\n  },\n};\nexport default config;\n"],"sourceRoot":""}